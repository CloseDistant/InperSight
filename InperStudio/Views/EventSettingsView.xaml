<inp:InperDialogWindow x:Class="InperStudio.Views.EventSettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:inp="clr-namespace:InperStudioControlLib.Control.Window;assembly=InperStudioControlLib"
        xmlns:inper="clr-namespace:InperStudioControlLib.Control.TextBox;assembly=InperStudioControlLib"
        xmlns:s="https://github.com/canton7/Stylet"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:vm="clr-namespace:InperStudio.ViewModels"
        xmlns:convert="clr-namespace:InperStudio.Lib.Convert"
        xmlns:local="clr-namespace:InperStudio.Views"
        mc:Ignorable="d" IsShowCancleButton="False" IsShowTopAllButton="False" IsShowOtherButton="False"
        Title="Marker" SizeToContent="Height"  Width="700" MinHeight="450" MinWidth="600" d:DataContext="{d:DesignInstance vm:EventSettingsViewModel}">
    <inp:InperDialogWindow.Resources>
        <convert:ChannelTypeToVisibilityConverter x:Key="ChannelTypeToVisibilityConverter" />
        <convert:VisibilityToVisibilityReConverter x:Key="VisibilityToVisibilityReConverter" />
        <convert:EventTypeConverter x:Key="EventTypeConverter" />
        <convert:EventOutputConverter x:Key="EventOutputConverter" />
        <convert:RoiAIVisibilityConverter x:Key="RoiAIVisibilityConverter" />
        <Style BasedOn="{StaticResource ComboBoxBaseStyle}" x:Key="InperComboBoxStyle" TargetType="ComboBox">
            <Style.Setters>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource ComboBoxItemBaseStyle}" TargetType="ComboBoxItem">
                            <Setter Property="Visibility" Value="{Binding IsActive,Converter={StaticResource Boolean2VisibilityReConverter},UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="False" />
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Bd" Value="{DynamicResource SecondaryRegionBrush}" Property="Background" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Bd" Value="{DynamicResource PrimaryBrush}" Property="Background" />
                                                <Setter Property="Foreground" Value="White" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
    </inp:InperDialogWindow.Resources>
    <Grid Background="{DynamicResource InperDialogContentColor}">
        <Grid x:Name="Marker" Margin="30 0" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" >
                <Grid Margin="0 20 0 0" >
                    <TextBlock Text="Channels Setting" Foreground="{DynamicResource InperTheme}" FontSize="{DynamicResource InperLargeFontSize}" />
                    <hc:Divider Width="130" VerticalAlignment="Center" HorizontalAlignment="Right"  LineStroke="{DynamicResource InperTheme}" Margin="0 0 20 0" Opacity=".4" />
                </Grid>
                <Grid Margin="0 20 0 0" x:Name="conditionGrid"  Visibility="Collapsed">
                    <TextBlock VerticalAlignment="Center" Text="Channel"  FontSize="{DynamicResource InperLargeFontSize}"/>
                    <ComboBox Margin="20 0"  Style="{StaticResource InperComboBoxStyle}"  HorizontalAlignment="Right" SelectedIndex="0" ItemsSource="{Binding MarkerChannels,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="SymbolName" Width="160" x:Name="ConditionsCombox" SelectionChanged="{s:Action MarkerChannelCombox_SelectionChanged}"/>
                </Grid>
                <Grid Margin="0 20 0 0" >
                    <TextBlock VerticalAlignment="Center" Text="Conditions"  FontSize="{DynamicResource InperLargeFontSize}"/>
                    <ComboBox Visibility="{Binding EventType,Converter={StaticResource EventTypeConverter}}" Margin="20 0" Style="{StaticResource InperComboBoxStyle}"  HorizontalAlignment="Right"  ItemsSource="{Binding MarkerChannels,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="SymbolName" Width="160" x:Name="MarkerChannelCombox" SelectionChanged="{s:Action MarkerChannelCombox_SelectionChanged}" />
                    <ComboBox Visibility="{Binding EventType,Converter={StaticResource EventOutputConverter}}" Margin="20 0" Style="{StaticResource InperComboBoxStyle}"  HorizontalAlignment="Right"  ItemsSource="{Binding ConditionsChannels,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="SymbolName" Width="160" x:Name="ConditionChannelCombox" SelectionChanged="{s:Action ConditionsChannelCombox_SelectionChanged}"/>
                </Grid>
                <Grid Visibility="{Binding EventType,Converter={StaticResource EventTypeConverter}}">
                    <!--Visibility="{Binding EventType,Converter={StaticResource EventTypeConverter}}"-->
                    <StackPanel Margin="0 20 0 0" Visibility="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.Name,Converter={StaticResource RoiAIVisibilityConverter}}" >
                        <Grid>
                            <TextBlock VerticalAlignment="Center" Text="δF/F (%)"  FontSize="{DynamicResource InperLargeFontSize}"/>
                            <hc:TextBox TextType="Double" HorizontalContentAlignment="Center" Text="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.DeltaF,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Name="deltaValue" HorizontalAlignment="Right" Style="{StaticResource TextBoxExtend}" Width="160" Margin="20 0"/>
                        </Grid>
                        <!--<WrapPanel HorizontalAlignment="Right" Margin="0 10 20 0">
                            <hc:TextBox Text="{Binding  ElementName=MarkerChannelCombox,Path=SelectedItem.Tau1,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Margin="0 0 10 0" Style="{StaticResource TextBoxExtend}" Width="60" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t1" />
                            <hc:TextBox Text="{Binding  ElementName=MarkerChannelCombox,Path=SelectedItem.Tau2,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Margin="0 0 10 0" Style="{StaticResource TextBoxExtend}" Width="70" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t2" />
                            <hc:TextBox Text="{Binding  ElementName=MarkerChannelCombox,Path=SelectedItem.Tau3,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Style="{StaticResource TextBoxExtend}" Width="60" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t3" />
                        </WrapPanel>-->
                        <WrapPanel Margin="0 20 0 0" HorizontalAlignment="Right">
                            <TextBlock VerticalAlignment="Center" Text="Light"  FontSize="{DynamicResource InperLargeFontSize}"/>
                            <ComboBox HorizontalAlignment="Right" Margin="20 0" Width="90" Name="LightSources" SelectedIndex="0" DisplayMemberPath="WaveType"/>
                        </WrapPanel>
                        <WrapPanel HorizontalAlignment="Right" Margin="0 20 20 0">
                            <TextBlock VerticalAlignment="Center" Text="WindowSize(point)"  FontSize="{DynamicResource InperLargeFontSize}"/>
                            <inper:InperTextBox InperVerify="True" InperMinValue="2" InperMaxValue="99999" InperTextType="Int" Text="{Binding ElementName=MarkerChannelCombox,Path=SelectionBoxItem.WindowSize,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource InperTextBoxBaseStyle}" Width="90" HorizontalAlignment="Right" Margin="10 0 0 0"/>
                        </WrapPanel>
                    </StackPanel>
                </Grid>
                <Grid Visibility="{Binding EventType,Converter={StaticResource EventOutputConverter}}">
                    <StackPanel Margin="0 20 0 0" Visibility="{Binding ElementName=ConditionChannelCombox,Path=SelectedItem.Name,Converter={StaticResource RoiAIVisibilityConverter}}" >
                        <Grid>
                            <TextBlock VerticalAlignment="Center" Text="δF/F (%)"  FontSize="{DynamicResource InperLargeFontSize}"/>
                            <hc:TextBox TextType="Double" HorizontalContentAlignment="Center" Text="{Binding ElementName=ConditionsCombox,Path=SelectedItem.DeltaF,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Name="outputdeltaValue" HorizontalAlignment="Right" Style="{StaticResource TextBoxExtend}" Width="160" Margin="20 0"/>
                        </Grid>
                        <!--<WrapPanel HorizontalAlignment="Right" Margin="0 10 20 0">
                            <hc:TextBox FontFamily="雅黑" Text="{Binding  ElementName=ConditionChannelCombox,Path=SelectedItem.Tau1,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Margin="0 0 10 0" Style="{StaticResource TextBoxExtend}" Width="60" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t1" />
                            <hc:TextBox FontFamily="雅黑" Text="{Binding  ElementName=ConditionChannelCombox,Path=SelectedItem.Tau2,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Margin="0 0 10 0" Style="{StaticResource TextBoxExtend}" Width="70" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t2" />
                            <hc:TextBox FontFamily="雅黑" Text="{Binding  ElementName=ConditionChannelCombox,Path=SelectedItem.Tau3,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Style="{StaticResource TextBoxExtend}" Width="60" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t3" />
                        </WrapPanel>-->
                        <WrapPanel Margin="0 20 0 0" HorizontalAlignment="Right">
                            <TextBlock VerticalAlignment="Center" Text="Light"  FontSize="{DynamicResource InperLargeFontSize}"/>
                            <ComboBox HorizontalAlignment="Right" Margin="20 0" Width="90" Name="OutLightSources" SelectedIndex="0" DisplayMemberPath="WaveType"/>
                        </WrapPanel>
                        <WrapPanel HorizontalAlignment="Right" Margin="0 20 20 0">
                            <TextBlock VerticalAlignment="Center" Text="WindowSize(point)"  FontSize="{DynamicResource InperLargeFontSize}"/>
                            <inper:InperTextBox InperVerify="True" InperMinValue="2" InperMaxValue="99999" InperTextType="Int" Text="{Binding ElementName=ConditionsCombox,Path=SelectionBoxItem.WindowSize,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource InperTextBoxBaseStyle}" Width="90" HorizontalAlignment="Right" Margin="10 0 0 0"/>
                        </WrapPanel>
                    </StackPanel>
                </Grid>
                <Grid Margin="0 20 0 0" >
                    <TextBlock VerticalAlignment="Center" Text="Name"  FontSize="{DynamicResource InperLargeFontSize}"/>
                    <hc:TextBox Margin="20 0" Style="{DynamicResource TextBoxBaseStyle}" MaxLength="21"  TextChanged="{s:Action MarkerName_TextChanged}" x:Name="MarkerName"  HorizontalAlignment="Right"  Width="160" />
                </Grid>
                <Grid Visibility="{Binding EventType,Converter={StaticResource EventTypeConverter}}" >
                    <Grid Margin="0 20 0 0" Visibility="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.Type,Converter={StaticResource ChannelTypeToVisibilityConverter}}">
                        <TextBlock VerticalAlignment="Center" Text="Hotkeys"  FontSize="{DynamicResource InperLargeFontSize}"/>
                        <Button Margin="20 0" Height="30" PreviewKeyDown="{s:Action Hotkeys_PreviewKeyDown}" x:Name="hotkeys" Content="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.Hotkeys}" HorizontalAlignment="Right"  Width="160" />
                    </Grid>
                </Grid>
                <Grid Visibility="{Binding EventType,Converter={StaticResource EventOutputConverter}}" >
                    <Grid Margin="0 20 0 0" Visibility="{Binding ElementName=ConditionChannelCombox,Path=SelectedItem.Type,Converter={StaticResource ChannelTypeToVisibilityConverter}}">
                        <TextBlock VerticalAlignment="Center" Text="Hotkeys"  FontSize="{DynamicResource InperLargeFontSize}"/>
                        <Button Margin="20 0" Height="30" PreviewKeyDown="{s:Action Hotkeys_PreviewKeyDown}" x:Name="outputHotkeys" Content="{Binding ElementName=ConditionChannelCombox,Path=SelectedItem.Hotkeys}" HorizontalAlignment="Right"  Width="160" />
                    </Grid>
                </Grid>
                <Grid>
                    <Grid Margin="0 20 0 0" Visibility="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.Name,Converter={StaticResource RoiAIVisibilityConverter}}">
                        <TextBlock VerticalAlignment="Center" Text="RP (s)"  FontSize="{DynamicResource InperLargeFontSize}"/>
                        <inper:InperTextBox Margin="20 0" HorizontalContentAlignment="Center" Text="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.RefractoryPeriod,Mode=TwoWay}" Style="{DynamicResource TextBoxBaseStyle}" InperTextType="Double" InperVerify="True" InperMinValue="0" InperMaxValue="99999"  HorizontalAlignment="Right"  Width="160" />
                    </Grid>
                </Grid>
                <Grid Margin="0 20 0 10" >
                    <TextBlock VerticalAlignment="Center" Text="Color"  FontSize="{DynamicResource InperLargeFontSize}"/>
                    <Button x:Name="PopButton" Cursor="Hand" Margin="20 0" HorizontalAlignment="Right" MinWidth="160" Click="{s:Action PopButton_Click}" />
                    <Popup x:Name="pop" PopupAnimation="Slide" PlacementTarget="{Binding ElementName=PopButton}" Placement="Bottom" AllowsTransparency="True" StaysOpen="False" Effect="{DynamicResource EffectShadow4}">
                        <ListBox x:Name="MarkerColorList" SelectionChanged="{s:Action MarkerColorList_Selected}"  Background="Transparent" BorderThickness="0" Margin="0 20" HorizontalAlignment="Stretch" Width="{Binding ElementName=PopButton,Path=ActualWidth}"  Style="{StaticResource WrapPanelHorizontalListBox}" ItemsSource="{Binding EventColorList,UpdateSourceTrigger=PropertyChanged}" >
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Label Height="20" Margin="2 5" Background="{Binding}" Cursor="Hand"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Popup>
                </Grid>
            </StackPanel>
            <Grid Grid.Column="1" Margin="20 0">
                <Button Cursor="Hand" x:Name="rightMove" Command="{s:Action MarkerMove}" CommandParameter="rightMove" hc:IconElement.Geometry="{DynamicResource RightGeometry}" Width="40" Margin="0 0 0 70" Style="{DynamicResource ButtonPrimary}" Background="{DynamicResource InperTheme}" ></Button>
                <Button Cursor="Hand" x:Name="leftMove" Command="{s:Action MarkerMove}" CommandParameter="leftMove" hc:IconElement.Geometry="{DynamicResource LeftGeometry}" Width="40"  Margin="0 30 0 0" Style="{DynamicResource ButtonPrimary}" Background="{DynamicResource InperTheme}"></Button>
            </Grid>
            <StackPanel Grid.Column="2" Margin="20 0 0 0">
                <Grid Margin="0 20 0 0">
                    <TextBlock Text="Active Channels" Foreground="{DynamicResource InperTheme}" FontSize="{DynamicResource InperLargeFontSize}" />
                    <hc:Divider Width="140" VerticalAlignment="Center" HorizontalAlignment="Right"  LineStroke="{DynamicResource InperTheme}" Margin="0 0 0 0"  Opacity=".4"/>
                </Grid>
                <ListBox Margin="0 20" Height="230"   ScrollViewer.VerticalScrollBarVisibility="Auto" x:Name="markerActiveChannel" ItemsSource="{Binding MarkerChannels,UpdateSourceTrigger=PropertyChanged}">
                    <ListBox.Style>
                        <Style BasedOn="{StaticResource ListBoxBaseStyle}" TargetType="ListBox">
                            <Style.Setters>
                                <Setter Property="ItemContainerStyle">
                                    <Setter.Value>
                                        <Style BasedOn="{StaticResource ListBoxItemBaseStyle}" TargetType="ListBoxItem">
                                            <Setter Property="Visibility" Value="{Binding IsActive,Converter={StaticResource Boolean2VisibilityConverter},UpdateSourceTrigger=PropertyChanged}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <Grid x:Name="test" Background="Transparent" Visibility="{Binding IsActive,Converter={StaticResource Boolean2VisibilityConverter},UpdateSourceTrigger=PropertyChanged}" >
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Label Height="20"  Margin="10 0 0 0" Grid.Column="0" Background="{Binding BgColor,UpdateSourceTrigger=PropertyChanged}" Cursor="Hand"/>
                                                            <TextBlock x:Name="tb" Grid.Column="1" Style="{DynamicResource TextBlockBaseStyle}" FontSize="{DynamicResource InperLargeFontSize}" Margin="40 0 0 0" TextWrapping="NoWrap" Text="{Binding Name}" />
                                                            <Border Grid.ColumnSpan="2" Margin="10 0" VerticalAlignment="Bottom"  BorderBrush="{DynamicResource InperTheme}" BorderThickness="0 0 0 1" Opacity=".2"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="Background" TargetName="test" Value="{DynamicResource SecondaryRegionBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsSelected" Value="true">
                                                                <Setter Property="Background" TargetName="test" Value="{DynamicResource PrimaryBrush}" />
                                                                <Setter Property="Foreground" TargetName="tb" Value="{DynamicResource TextIconBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style.Setters>
                        </Style>
                    </ListBox.Style>
                </ListBox>
            </StackPanel>
        </Grid>
    </Grid>
</inp:InperDialogWindow>
