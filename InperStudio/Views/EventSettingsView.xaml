<inp:InperDialogWindow x:Class="InperStudio.Views.EventSettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:inp="clr-namespace:InperStudioControlLib.Control.Window;assembly=InperStudioControlLib"
        xmlns:inper="clr-namespace:InperStudioControlLib.Control.TextBox;assembly=InperStudioControlLib"
        xmlns:s="https://github.com/canton7/Stylet"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:global="clr-namespace:InperStudio.Lib.Bean"
        xmlns:vm="clr-namespace:InperStudio.ViewModels"
        xmlns:convert="clr-namespace:InperStudio.Lib.Convert"
        xmlns:local="clr-namespace:InperStudio.Views"
        mc:Ignorable="d" IsShowCancleButton="False" IsShowTopAllButton="False" IsShowOtherButton="False" 
        Title="Marker" FontFamily="{DynamicResource InperFontFamily}" x:Name="eswidnow" SizeToContent="Height"  Width="540" Height="380" d:DataContext="{d:DesignInstance vm:EventSettingsViewModel}">
    <inp:InperDialogWindow.Resources>
        <convert:ChannelTypeToVisibilityConverter x:Key="ChannelTypeToVisibilityConverter" />
        <convert:ChannelAnalogTypeToVisibilityConverter x:Key="ChannelAnalogTypeToVisibilityConverter" />
        <convert:VisibilityToVisibilityReConverter x:Key="VisibilityToVisibilityReConverter" />
        <convert:ZoneVisibilityConverter x:Key="ZoneVisibilityConverter" />
        <convert:ZoneConditionVisibilityConverter x:Key="ZoneConditionVisibilityConverter" />
        <convert:EventTypeConverter x:Key="EventTypeConverter" />
        <convert:EventOutputConverter x:Key="EventOutputConverter" />
        <convert:RoiAIVisibilityConverter x:Key="RoiAIVisibilityConverter" />
        <global:InperGlobalClass x:Key="InperGlobalClass" />
        <Style BasedOn="{StaticResource ComboBoxBaseStyle}" x:Key="InperComboBoxStyle" TargetType="ComboBox">
            <Style.Setters>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style BasedOn="{StaticResource ComboBoxItemBaseStyle}" TargetType="ComboBoxItem">
                            <Setter Property="Visibility" Value="{Binding IsActive,Converter={StaticResource Boolean2VisibilityReConverter},UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="False" />
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Bd" Value="{DynamicResource SecondaryRegionBrush}" Property="Background" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Bd" Value="{DynamicResource PrimaryBrush}" Property="Background" />
                                                <Setter Property="Foreground" Value="White" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
    </inp:InperDialogWindow.Resources>
    <Grid Background="{DynamicResource InperDialogContentColor}" >
        <Grid x:Name="Marker" Margin="20 0" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.8*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="1.2*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" >
                <Grid Margin="0 20 0 0" >
                    <TextBlock Text="{DynamicResource marker_channels_settings}" Foreground="{DynamicResource InperTheme}" FontSize="{DynamicResource  InperNormalFontSize}" />
                    <hc:Divider Width="142" VerticalAlignment="Center" HorizontalAlignment="Right"  LineStroke="{DynamicResource InperTheme}" Margin="0 0 20 0" Opacity=".4" />
                </Grid>
                <Grid Margin="0 20 0 0" x:Name="conditionGrid"  Visibility="Collapsed">
                    <TextBlock VerticalAlignment="Center" Text="{DynamicResource marker_channel}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                    <!--aa-->
                    <ComboBox Margin="20 0" Style="{StaticResource InperComboBoxBaseStyle}"  Height="25" hc:BorderElement.CornerRadius="2" FontSize="{DynamicResource InperNormalFontSize}"  HorizontalAlignment="Right" SelectedIndex="0" ItemsSource="{Binding MarkerChannels,UpdateSourceTrigger=PropertyChanged}" Width="170" x:Name="ConditionsCombox" SelectionChanged="{s:Action MarkerChannelCombox_SelectionChanged}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="VirtualizingPanel.Visibility" Value="{Binding IsActive,Converter={StaticResource Boolean2VisibilityReConverter}}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ComboBoxItem">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="5">
                                                <ContentPresenter />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="#326CF3" />
                                                    <Setter Property="Foreground" Value="#EEEEEE" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding SymbolName}"/>
                                </Grid>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
                <Grid Margin="0 20 0 0" >
                    <TextBlock VerticalAlignment="Center" Text="{DynamicResource marker_conditions}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                    <ComboBox Height="25" hc:BorderElement.CornerRadius="2" Padding="3 0 0 0" Visibility="{Binding EventType,Converter={StaticResource EventTypeConverter}}" FontSize="{DynamicResource InperNormalFontSize}" Margin="20 0" Style="{StaticResource InperComboBoxBaseStyle}"  HorizontalAlignment="Right"  ItemsSource="{Binding MarkerChannels,UpdateSourceTrigger=PropertyChanged}" Width="170" x:Name="MarkerChannelCombox" SelectionChanged="{s:Action MarkerChannelCombox_SelectionChanged}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="VirtualizingPanel.Visibility" Value="{Binding IsActive,Converter={StaticResource Boolean2VisibilityReConverter}}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ComboBoxItem">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="5">
                                                <ContentPresenter />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="#326CF3" />
                                                    <Setter Property="Foreground" Value="#EEEEEE" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding SymbolName}"/>
                                </Grid>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox Height="25" hc:BorderElement.CornerRadius="2" Visibility="{Binding EventType,Converter={StaticResource EventOutputConverter}}" FontSize="{DynamicResource InperNormalFontSize}" Margin="20 0" Style="{StaticResource InperComboBoxBaseStyle}"  HorizontalAlignment="Right"  ItemsSource="{Binding ConditionsChannels,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="SymbolName" Width="170" x:Name="ConditionChannelCombox" SelectionChanged="{s:Action ConditionsChannelCombox_SelectionChanged}" Padding="5 0 0 0"/>
                </Grid>
                <!--outputzone-->
                <Grid  Visibility="{Binding EventType,Converter={StaticResource EventOutputConverter}}">
                    <Grid Margin="0 20 0 0" x:Name="outputzoneVisibility" Visibility="{Binding ElementName=ConditionChannelCombox,Path=SelectedItem.Name,Converter={StaticResource ZoneVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2.2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Mode" FontSize="{DynamicResource InperNormalFontSize}" Grid.Column="0" VerticalAlignment="Center"/>
                            <ComboBox Height="25" hc:BorderElement.CornerRadius="2" Style="{StaticResource InperComboBoxBaseStyle}" Grid.Column="1" Margin="0 0 20 0" Name="outputMode" ItemsSource="{Binding ElementName=ConditionChannelCombox,Path=SelectedItem.VideoZone.AllZoneConditions}" DisplayMemberPath="ZoneName"/>
                        </Grid>
                        <Grid Grid.Row="1" Margin="0 20 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2.2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock FontSize="{DynamicResource InperNormalFontSize}" Text="Detail" VerticalAlignment="Center"/>
                            <ComboBox Height="25" hc:BorderElement.CornerRadius="2" Style="{StaticResource InperComboBoxBaseStyle}" Grid.Column="1" Margin="0 0 20 0" Name="zoneConditions1" Text="{Binding ElementName=outputMode,Path=SelectedValue.Type,Mode=TwoWay}">
                                <ComboBoxItem IsSelected="True">Enter</ComboBoxItem>
                                <ComboBoxItem>Leave</ComboBoxItem>
                                <ComboBoxItem>Stay</ComboBoxItem>
                            </ComboBox>
                        </Grid>
                        <WrapPanel HorizontalAlignment="Center" Name="stayCondition" Grid.Row="2" Margin="32 10 0 0" Visibility="{Binding ElementName=zoneConditions1,Path=SelectedItem.Content,Converter={StaticResource ZoneConditionVisibilityConverter}}">
                            <TextBlock Text="Duration (s)" FontSize="{DynamicResource InperNormalFontSize}" VerticalAlignment="Center"/>
                            <TextBox Style="{StaticResource TextBoxBaseStyle}" Padding="3 0 0 0" Height="25" VerticalContentAlignment="Center" Width="120" Margin="20 0 0 0" hc:BorderElement.CornerRadius="2" Text="{Binding ElementName=outputMode,Path=SelectedValue.Duration,Mode=TwoWay}"/>
                        </WrapPanel>
                        <StackPanel Grid.Row="2" Margin="0 10 0 0" Visibility="{Binding ElementName=stayCondition,Path=Visibility,Converter={StaticResource VisibilityToVisibilityReConverter}}">
                            <RadioButton GroupName="zone" IsChecked="{Binding ElementName=outputMode,Path=SelectedValue.IsImmediately,Mode=TwoWay}" HorizontalAlignment="Left" Margin="80 5 0 0">
                                <TextBlock Text="Immediately" FontSize="{DynamicResource InperNormalFontSize}"/>
                            </RadioButton>
                            <RadioButton GroupName="zone" Margin="80 10 0 0" Name="outputZone" HorizontalAlignment="Left" IsChecked="{Binding ElementName=outputMode,Path=SelectedValue.IsDelay,Mode=TwoWay}">
                                <WrapPanel>
                                    <TextBlock VerticalAlignment="Center" Text="Delay (s)" FontSize="{DynamicResource InperNormalFontSize}"/>
                                    <TextBox Style="{StaticResource TextBoxBaseStyle}" hc:BorderElement.CornerRadius="2" Padding="3 0 0 0" Height="25" VerticalContentAlignment="Center" Width="60" Margin="12 0 0 0" IsEnabled="{Binding ElementName=outputZone,Path=IsChecked}" Text="{Binding ElementName=outputMode,Path=SelectedValue.DelaySeconds,Mode=TwoWay}"/>
                                </WrapPanel>
                            </RadioButton>
                        </StackPanel>
                    </Grid>
                </Grid>
                <!--markerZone-->
                <Grid Visibility="{Binding EventType,Converter={StaticResource EventTypeConverter}}">
                    <Grid Margin="0 20 0 0" Visibility="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.Name,Converter={StaticResource ZoneVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2.2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Mode" FontSize="{DynamicResource InperNormalFontSize}" Grid.Column="0" VerticalAlignment="Center"/>
                            <ComboBox Height="25" hc:BorderElement.CornerRadius="2" Style="{StaticResource InperComboBoxBaseStyle}" Grid.Column="1" Margin="0 0 20 0" Name="markerMode" SelectionChanged="{s:Action MarkerMode_SelectionChanged}" ItemsSource="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.VideoZone.AllZoneConditions}" DisplayMemberPath="ZoneName"/>
                        </Grid>
                        <Grid Grid.Row="1" Margin="0 20 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2.2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock FontSize="{DynamicResource InperNormalFontSize}" Text="Detail" VerticalAlignment="Center"/>
                            <ComboBox Height="25" hc:BorderElement.CornerRadius="2" Style="{StaticResource InperComboBoxBaseStyle}" Grid.Column="1" Margin="0 0 20 0" Name="zoneConditions" Text="{Binding ElementName=markerMode,Path=SelectedValue.Type,Mode=TwoWay}">
                                <ComboBoxItem IsSelected="True">Enter</ComboBoxItem>
                                <ComboBoxItem>Leave</ComboBoxItem>
                                <ComboBoxItem>Stay</ComboBoxItem>
                            </ComboBox>
                        </Grid>
                        <WrapPanel HorizontalAlignment="Center" Name="stayCondition1" Grid.Row="2" Margin="16 15 0 0" Visibility="{Binding ElementName=zoneConditions,Path=SelectedItem.Content,Converter={StaticResource ZoneConditionVisibilityConverter}}">
                            <TextBlock Text="Duration (s)" FontSize="{DynamicResource InperNormalFontSize}" VerticalAlignment="Center"/>
                            <TextBox VerticalContentAlignment="Center" Width="120" Margin="20 0 0 0" Style="{StaticResource TextBoxBaseStyle}" hc:BorderElement.CornerRadius="2" Padding="3 0 0 0" Height="25" Text="{Binding ElementName=markerMode,Path=SelectedValue.Duration,Mode=TwoWay}"/>
                        </WrapPanel>
                        <StackPanel Grid.Row="2" Margin="0 10 0 0" Visibility="{Binding ElementName=stayCondition1,Path=Visibility,Converter={StaticResource VisibilityToVisibilityReConverter}}">
                            <RadioButton GroupName="zone"  IsChecked="{Binding ElementName=markerMode,Path=SelectedValue.IsImmediately,Mode=TwoWay}" HorizontalAlignment="Left" Margin="80 5 0 0">
                                <TextBlock Text="Immediately" FontSize="{DynamicResource InperNormalFontSize}"/>
                            </RadioButton>
                            <RadioButton GroupName="zone" Margin="80 10 0 0" Name="markerZone" HorizontalAlignment="Left" IsChecked="{Binding ElementName=markerMode,Path=SelectedValue.IsDelay,Mode=TwoWay}">
                                <WrapPanel>
                                    <TextBlock VerticalAlignment="Center" Text="Delay (s)" FontSize="{DynamicResource InperNormalFontSize}"/>
                                    <TextBox VerticalContentAlignment="Center" Style="{StaticResource TextBoxBaseStyle}" hc:BorderElement.CornerRadius="2" Padding="3 0 0 0" Height="25" Width="60" Margin="12 0 0 0" IsEnabled="{Binding ElementName=markerZone,Path=IsChecked}" Text="{Binding ElementName=markerMode,Path=SelectedValue.DelaySeconds,Mode=TwoWay}" />
                                </WrapPanel>
                            </RadioButton>
                        </StackPanel>
                    </Grid>
                </Grid>
                <!--zone end-->
                <Grid Visibility="{Binding EventType,Converter={StaticResource EventTypeConverter}}">
                    <!--Visibility="{Binding EventType,Converter={StaticResource EventTypeConverter}}"-->
                    <StackPanel Margin="0 20 0 0" Visibility="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.Name,Converter={StaticResource RoiAIVisibilityConverter}}" >
                        <Grid>
                            <TextBlock VerticalAlignment="Center" Text="δF/F (%)"  FontSize="{DynamicResource InperNormalFontSize}"/>
                            <hc:TextBox VerticalContentAlignment="Center" Style="{StaticResource TextBoxBaseStyle}" hc:BorderElement.CornerRadius="2" Padding="3 0 0 0" MinHeight="25" FontSize="{DynamicResource InperNormalFontSize}" HorizontalContentAlignment="Center" Text="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.DeltaF,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Name="deltaValue" HorizontalAlignment="Right" Width="170" Margin="20 0"/>
                        </Grid>
                        <!--<WrapPanel HorizontalAlignment="Right" Margin="0 10 20 0">
                            <hc:TextBox Text="{Binding  ElementName=MarkerChannelCombox,Path=SelectedItem.Tau1,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Margin="0 0 10 0" Style="{StaticResource TextBoxExtend}" Width="60" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t1" />
                            <hc:TextBox Text="{Binding  ElementName=MarkerChannelCombox,Path=SelectedItem.Tau2,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Margin="0 0 10 0" Style="{StaticResource TextBoxExtend}" Width="70" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t2" />
                            <hc:TextBox Text="{Binding  ElementName=MarkerChannelCombox,Path=SelectedItem.Tau3,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Style="{StaticResource TextBoxExtend}" Width="60" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t3" />
                        </WrapPanel>-->
                        <WrapPanel Margin="0 20 0 0" HorizontalAlignment="Right" Name="lightSource">
                            <TextBlock VerticalAlignment="Center" Text="{DynamicResource marker_light}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                            <ComboBox Height="25" hc:BorderElement.CornerRadius="2" Style="{StaticResource InperComboBoxBaseStyle}" HorizontalAlignment="Right" FontSize="{DynamicResource InperNormalFontSize}" Margin="20 0" Width="100" Name="LightSources" SelectedIndex="0" DisplayMemberPath="WaveType"/>
                        </WrapPanel>
                        <WrapPanel HorizontalAlignment="Right" Margin="0 20 20 0">
                            <TextBlock VerticalAlignment="Center" Text="{DynamicResource marker_windowsize}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                            <inper:InperTextBox VerticalContentAlignment="Center" MinHeight="25" TextAlignment="Center" Style="{StaticResource TextBoxBaseStyle}" hc:BorderElement.CornerRadius="2" Padding="3 0 0 0" InperVerify="True" FontSize="{DynamicResource InperNormalFontSize}" InperMinValue="1" InperMaxValue="99999" InperTextType="Int" Text="{Binding ElementName=MarkerChannelCombox,Path=SelectionBoxItem.WindowSize,UpdateSourceTrigger=PropertyChanged}" Width="100" HorizontalAlignment="Right" Margin="10 0 0 0"/>
                        </WrapPanel>
                    </StackPanel>
                </Grid>
                <Grid Visibility="{Binding EventType,Converter={StaticResource EventOutputConverter}}">
                    <StackPanel Margin="0 20 0 0" Visibility="{Binding ElementName=ConditionChannelCombox,Path=SelectedItem.Name,Converter={StaticResource RoiAIVisibilityConverter}}" >
                        <Grid>
                            <TextBlock VerticalAlignment="Center" Text="δF/F (%)"  FontSize="{DynamicResource InperNormalFontSize}"/>
                            <hc:TextBox VerticalContentAlignment="Center" MinHeight="25" Style="{StaticResource TextBoxBaseStyle}" hc:BorderElement.CornerRadius="2" Padding="3 0 0 0"  FontSize="{DynamicResource InperNormalFontSize}" HorizontalContentAlignment="Center" Text="{Binding ElementName=ConditionsCombox,Path=SelectedItem.DeltaF,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Name="outputdeltaValue" HorizontalAlignment="Right" Width="170" Margin="20 0"/>
                        </Grid>
                        <!--<WrapPanel HorizontalAlignment="Right" Margin="0 10 20 0">
                            <hc:TextBox FontFamily="雅黑" Text="{Binding  ElementName=ConditionChannelCombox,Path=SelectedItem.Tau1,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Margin="0 0 10 0" Style="{StaticResource TextBoxExtend}" Width="60" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t1" />
                            <hc:TextBox FontFamily="雅黑" Text="{Binding  ElementName=ConditionChannelCombox,Path=SelectedItem.Tau2,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Margin="0 0 10 0" Style="{StaticResource TextBoxExtend}" Width="70" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t2" />
                            <hc:TextBox FontFamily="雅黑" Text="{Binding  ElementName=ConditionChannelCombox,Path=SelectedItem.Tau3,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" Style="{StaticResource TextBoxExtend}" Width="60" hc:TitleElement.TitleWidth="25"  hc:TitleElement.TitlePlacement="Left"  hc:TitleElement.Title="t3" />
                        </WrapPanel>-->
                        <WrapPanel Margin="0 20 0 0" HorizontalAlignment="Right" Visibility="{Binding ElementName=ConditionChannelCombox,Path=SelectedItem.Type,Converter={StaticResource ChannelAnalogTypeToVisibilityConverter}}">
                            <TextBlock VerticalAlignment="Center" Text="{DynamicResource marker_light}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                            <ComboBox Height="25" hc:BorderElement.CornerRadius="2" Style="{StaticResource InperComboBoxBaseStyle}" HorizontalAlignment="Right" FontSize="{DynamicResource InperNormalFontSize}" Margin="20 0" Width="90" Name="OutLightSources" SelectedIndex="0" DisplayMemberPath="WaveType"/>
                        </WrapPanel>
                        <WrapPanel HorizontalAlignment="Right" Margin="0 20 20 0">
                            <TextBlock VerticalAlignment="Center" Text="{StaticResource marker_windowsize}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                            <inper:InperTextBox InperVerify="True" Height="25" Padding="3 0 0 0" VerticalContentAlignment="Center" hc:BorderElement.CornerRadius="2" TextAlignment="Center" FontSize="{DynamicResource InperNormalFontSize}" InperMinValue="1" InperMaxValue="99999" InperTextType="Int" Text="{Binding ElementName=ConditionsCombox,Path=SelectionBoxItem.WindowSize,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource InperTextBoxBaseStyle}" Width="90" HorizontalAlignment="Right" Margin="10 0 0 0"/>
                        </WrapPanel>
                    </StackPanel>
                </Grid>
                <Grid Margin="0 20 0 0" >
                    <TextBlock VerticalAlignment="Center" Text="{DynamicResource marker_name}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                    <hc:TextBox Margin="20 0" Height="25" Padding="0" VerticalContentAlignment="Center" TextAlignment="Center" hc:BorderElement.CornerRadius="2" FontSize="{DynamicResource InperNormalFontSize}" Style="{DynamicResource InperTextBoxBaseStyle}" MaxLength="21"  TextChanged="{s:Action MarkerName_TextChanged}" x:Name="MarkerName"  HorizontalAlignment="Right"  Width="170" />
                </Grid>
                <Grid Visibility="{Binding EventType,Converter={StaticResource EventTypeConverter}}" >
                    <Grid Margin="0 20 0 0" Visibility="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.Type,Converter={StaticResource ChannelTypeToVisibilityConverter}}">
                        <TextBlock VerticalAlignment="Center" Text="{DynamicResource marker_hotkeys}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                        <Button Margin="20 0" Height="25" Padding="0" hc:BorderElement.CornerRadius="2" PreviewKeyDown="{s:Action Hotkeys_PreviewKeyDown}" FontSize="{DynamicResource InperNormalFontSize}" x:Name="hotkeys" Content="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.Hotkeys}" HorizontalAlignment="Right"  Width="170" />
                    </Grid>
                </Grid>
                <Grid Visibility="{Binding EventType,Converter={StaticResource EventOutputConverter}}" >
                    <Grid Margin="0 20 0 0" Visibility="{Binding ElementName=ConditionChannelCombox,Path=SelectedItem.Type,Converter={StaticResource ChannelTypeToVisibilityConverter}}">
                        <TextBlock VerticalAlignment="Center" Text="{DynamicResource marker_hotkeys}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                        <Button Margin="20 0" Height="25" Padding="0" hc:BorderElement.CornerRadius="2" FontSize="{DynamicResource InperNormalFontSize}" PreviewKeyDown="{s:Action Hotkeys_PreviewKeyDown}" x:Name="outputHotkeys" Content="{Binding ElementName=ConditionChannelCombox,Path=SelectedItem.Hotkeys}" HorizontalAlignment="Right"  Width="170" />
                    </Grid>
                </Grid>
                <Grid>
                    <Grid Margin="0 20 0 0"  Visibility="{Binding ElementName=MarkerName,Path=Text,Converter={StaticResource RoiAIVisibilityConverter}}">
                        <TextBlock VerticalAlignment="Center" Text="{DynamicResource marker_rp}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                        <inper:InperTextBox Margin="20 0" Name="refp" hc:BorderElement.CornerRadius="2" Height="25" Padding="3 0 0 0" VerticalContentAlignment="Center" FontSize="{DynamicResource InperNormalFontSize}" HorizontalContentAlignment="Center" Text="{Binding ElementName=MarkerChannelCombox,Path=SelectedItem.RefractoryPeriod}" Style="{DynamicResource InperTextBoxBaseStyle}" InperTextType="Double" InperVerify="True" InperMinValue="0" InperMaxValue="99999"  HorizontalAlignment="Right"  Width="170" />
                    </Grid>
                </Grid>
                <Grid Margin="0 20 0 10" >
                    <TextBlock VerticalAlignment="Center" Text="{DynamicResource marker_color}"  FontSize="{DynamicResource InperNormalFontSize}"/>
                    <Button x:Name="PopButton" Cursor="Hand" Margin="20 0" HorizontalAlignment="Right" Height="25" MinWidth="170" Click="{s:Action PopButton_Click}" />
                    <Popup x:Name="pop" PopupAnimation="Slide" PlacementTarget="{Binding ElementName=PopButton}" Placement="Bottom" AllowsTransparency="True" StaysOpen="False" Effect="{DynamicResource EffectShadow4}">
                        <ListBox x:Name="MarkerColorList" SelectionChanged="{s:Action MarkerColorList_Selected}"  Background="Transparent" BorderThickness="0" Margin="0 20" HorizontalAlignment="Stretch" Width="{Binding ElementName=PopButton,Path=ActualWidth}"  Style="{StaticResource WrapPanelHorizontalListBox}" ItemsSource="{Binding EventColorList,UpdateSourceTrigger=PropertyChanged}" >
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Label Height="20" Margin="2 5" Background="{Binding}" Cursor="Hand"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Popup>
                </Grid>
            </StackPanel>
            <Grid Grid.Column="1" IsEnabled="{Binding Source={StaticResource InperGlobalClass},Path= IsRecord,Converter={StaticResource Boolean2BooleanReConverter},UpdateSourceTrigger=PropertyChanged}">
                <Button Cursor="Hand" x:Name="rightMove" Command="{s:Action MarkerMove}" CommandParameter="rightMove" hc:IconElement.Geometry="{DynamicResource RightGeometry}" Width="36" Height="24" Margin="0 0 0 130" Style="{DynamicResource ButtonPrimary}" BorderThickness="0" Background="{DynamicResource InperTheme}" ></Button>
                <Button Cursor="Hand" x:Name="leftMove" Command="{s:Action MarkerMove}" CommandParameter="leftMove" hc:IconElement.Geometry="{DynamicResource LeftGeometry}" Width="36" Height="24"   Margin="0 -30 0 0" Style="{DynamicResource ButtonPrimary}" BorderThickness="0" Background="{DynamicResource InperTheme}"></Button>
            </Grid>
            <StackPanel Grid.Column="2" Margin="20 0 0 0">
                <Grid Margin="0 20 0 0">
                    <TextBlock Text="{DynamicResource marker_active_channels}" Foreground="{DynamicResource InperTheme}" FontSize="{DynamicResource InperNormalFontSize}" />
                    <hc:Divider Width="52" VerticalAlignment="Center" HorizontalAlignment="Right"  LineStroke="{DynamicResource InperTheme}" Margin="0 0 0 0"  Opacity=".4"/>
                </Grid>
                <ListBox Margin="0 20" Height="200"  ScrollViewer.VerticalScrollBarVisibility="Auto" x:Name="markerActiveChannel" ItemsSource="{Binding MarkerChannels,UpdateSourceTrigger=PropertyChanged}">
                    <ListBox.Style>
                        <Style BasedOn="{StaticResource ListBoxBaseStyle}" TargetType="ListBox">
                            <Style.Setters>
                                <Setter Property="ItemContainerStyle">
                                    <Setter.Value>
                                        <Style BasedOn="{StaticResource ListBoxItemBaseStyle}" TargetType="ListBoxItem">
                                            <Setter Property="Visibility" Value="{Binding IsActive,Converter={StaticResource Boolean2VisibilityConverter},UpdateSourceTrigger=PropertyChanged}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <Grid x:Name="test" Background="Transparent" MouseEnter="{s:Action Test_MouseEnter}" Visibility="{Binding IsActive,Converter={StaticResource Boolean2VisibilityConverter},UpdateSourceTrigger=PropertyChanged}" >
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="3.5*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Label Height="12" Width="12"  Margin="10 0 0 0" Grid.Column="0" Style="{x:Null}" Background="{Binding BgColor,UpdateSourceTrigger=PropertyChanged}" Cursor="Hand"/>
                                                            <TextBlock x:Name="tb" Grid.Column="1" FontFamily="{StaticResource InperFontFamily}" HorizontalAlignment="Left" Margin="10 0 0 0" Style="{DynamicResource TextBlockBaseStyle}" FontSize="{DynamicResource InperNormalFontSize}" TextWrapping="NoWrap" Text="{Binding Name}" />
                                                            <Border Grid.ColumnSpan="2" Margin="0" VerticalAlignment="Bottom"  BorderBrush="{DynamicResource InperTheme}" BorderThickness="0 0 0 1" Opacity=".2"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="Background" TargetName="test" Value="{DynamicResource SecondaryRegionBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsSelected" Value="true">
                                                                <Setter Property="Background" TargetName="test" Value="{DynamicResource PrimaryBrush}" />
                                                                <Setter Property="Foreground" TargetName="tb" Value="{DynamicResource TextIconBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style.Setters>
                        </Style>
                    </ListBox.Style>
                </ListBox>
            </StackPanel>
        </Grid>
    </Grid>
</inp:InperDialogWindow>
