<inp:InperDialogWindow x:Class="InperStudio.Views.AdditionSettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InperStudio.Views"
        xmlns:s="https://github.com/canton7/Stylet"
        xmlns:global="clr-namespace:InperStudio.Lib.Bean"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:inper="clr-namespace:InperStudioControlLib.Control.TextBox;assembly=InperStudioControlLib"
        xmlns:vm="clr-namespace:InperStudio.ViewModels"
        xmlns:inp="clr-namespace:InperStudioControlLib.Control.Window;assembly=InperStudioControlLib" OtherButtonText="Open all"
        mc:Ignorable="d" IsShowMaxButton="False" IsShowMiniButton="False" FontFamily="{StaticResource InperFontFamily}" IsShowTopAllButton="False"  IsShowCancleButton="False" IsShowOtherButton="True"
        Title="Video Settings" SizeToContent="Height" MinHeight="440" Height="440" Width="540" d:DataContext="{d:DesignInstance vm:AdditionSettingsViewModel}">
    <inp:InperDialogWindow.Resources>
        <global:InperGlobalClass x:Key="InperGlobalClass" />
    </inp:InperDialogWindow.Resources>
    <Grid  Background="{DynamicResource InperDialogContentColor}" IsEnabled="{Binding Source={StaticResource InperGlobalClass},Path= IsRecord,Converter={StaticResource Boolean2BooleanReConverter},UpdateSourceTrigger=PropertyChanged}">
        <Grid x:Name="trigger" Visibility="Collapsed"  Margin="20 10" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" HorizontalAlignment="Stretch" DataContext="{Binding AdditionRecordStart,UpdateSourceTrigger=PropertyChanged}">
                <Grid Margin="0 20 0 0" >
                    <TextBlock Text="Start" Foreground="{DynamicResource InperTheme}" FontSize="{DynamicResource InperLargeFontSize}" />
                    <hc:Divider Width="Auto" VerticalAlignment="Center" Opacity=".4" HorizontalAlignment="Stretch"  LineStroke="{DynamicResource InperTheme}" Margin="46 0 0 0"  />
                </Grid>
                <RadioButton HorizontalAlignment="Left" Checked="{s:Action TriggerStart_Checked}" Margin="0 20 0 0" GroupName="start" x:Name="immediately" IsChecked="{Binding Immediately,Mode=TwoWay}">
                    <TextBlock Text="Immediately after pressing button Start" Margin="5 0 0 0"  FontSize="{DynamicResource InperLargeFontSize}"/>
                </RadioButton>
                <RadioButton HorizontalAlignment="Left" Checked="{s:Action TriggerStart_Checked}" Margin="0 20 0 0" GroupName="start" x:Name="delay" IsChecked="{Binding Delay.IsActive,Mode=TwoWay}">
                    <WrapPanel IsEnabled="{Binding ElementName=delay,Path=IsChecked}">
                        <TextBlock Text="Delay after pressing button Start (s)" VerticalAlignment="Center" Margin="5 0 0 0"  FontSize="{DynamicResource InperLargeFontSize}"/>
                        <inper:InperTextBox Style="{StaticResource TextBoxBaseStyle}" InperVerify="True" InperTextType="Double" InperMaxValue="99999" InperMinValue="0.001" Width="40" HorizontalAlignment="Right" Margin="10 0 0 0" Text="{Binding Delay.Value,Mode=TwoWay}" />
                    </WrapPanel>
                </RadioButton>
                <RadioButton HorizontalAlignment="Left" Checked="{s:Action TriggerStart_Checked}" Margin="0 20 0 0" GroupName="start" x:Name="atTime" FontSize="{DynamicResource InperLargeFontSize}" IsChecked="{Binding AtTime.IsActive,Mode=TwoWay}">
                    <WrapPanel IsEnabled="{Binding ElementName=atTime,Path=IsChecked}">
                        <TextBlock Text="At time" Margin="5 0 0 0" VerticalAlignment="Center" />
                        <inper:InperTextBox Style="{StaticResource TextBoxBaseStyle}" Width="40" InperTextType="Double" InperVerify="True" InperMaxValue="23" InperMinValue="0" InperTextChanged="{s:Action AtTime_TextChanged}" Name="startHours" HorizontalContentAlignment="Center" Margin="19 0 0 0" Text="{Binding AtTime.Hours,Mode=TwoWay}"/>
                        <TextBlock Text="：" VerticalAlignment="Center" Margin="5 0"/>
                        <inper:InperTextBox Style="{StaticResource TextBoxBaseStyle}" Width="40" InperTextType="Double" InperVerify="True" InperMaxValue="59" InperMinValue="0" InperTextChanged="{s:Action AtTime_TextChanged}" Name="startMinutes" HorizontalContentAlignment="Center" Text="{Binding AtTime.Minutes,Mode=TwoWay}"/>
                        <TextBlock Text="：" VerticalAlignment="Center" Margin="4 0"/>
                        <inper:InperTextBox Style="{StaticResource TextBoxBaseStyle}" Width="40" InperTextType="Double" InperVerify="True" InperMaxValue="59" InperMinValue="0" InperTextChanged="{s:Action AtTime_TextChanged}" Name="startSeconds" HorizontalContentAlignment="Center" Text="{Binding AtTime.Seconds,Mode=TwoWay}"/>
                    </WrapPanel>
                </RadioButton>
                <WrapPanel Margin="0 20 0 0"  Visibility="Collapsed">
                    <RadioButton HorizontalAlignment="Left" Checked="{s:Action TriggerStart_Checked}" VerticalAlignment="Top" x:Name="triggerRad" Margin="0 5 0 0 " IsChecked="{Binding Trigger.IsActive,Mode=TwoWay}"  GroupName="start">
                        <WrapPanel IsEnabled="{Binding ElementName=triggerRad,Path=IsChecked}">
                            <TextBlock Text="Trigger" Margin="5 0 0 0" VerticalAlignment="Center"  FontSize="{DynamicResource InperLargeFontSize}"/>
                            <TextBlock Text="Source" Foreground="#333" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="10 0"/>
                            <ComboBox HorizontalAlignment="Right" Width="80" Style="{StaticResource ComboBoxExtend}" SelectedValue="{Binding Trigger.Source,Mode=TwoWay}" />
                            <TextBlock Text="Pritrigger (ms)" Foreground="#333" HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="10 0"/>
                            <TextBox HorizontalAlignment="Right" Width="80" Text="{Binding Trigger.PriTrigger,Mode=TwoWay}"/>
                            <TextBlock Text="Threshod (V)" Foreground="#333" HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="10 0"/>
                            <TextBox HorizontalAlignment="Right" Width="40" Text="{Binding Trigger.ThreshodMin,Mode=TwoWay}" />
                            <TextBlock Text="-" Foreground="#333" HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="10 0"/>
                            <TextBox HorizontalAlignment="Right" Width="40" Text="{Binding Trigger.ThreshodMax,Mode=TwoWay}" />
                        </WrapPanel>
                    </RadioButton>
                </WrapPanel>
            </StackPanel>
            <StackPanel Grid.Row="1" HorizontalAlignment="Stretch" DataContext="{Binding AdditionRecordStop,UpdateSourceTrigger=PropertyChanged}">
                <Grid Margin="0 20 0 0" >
                    <TextBlock Text="Stop" Foreground="{DynamicResource InperTheme}" FontSize="{DynamicResource InperLargeFontSize}" />
                    <hc:Divider Width="Auto" VerticalAlignment="Center" Opacity=".4" HorizontalAlignment="Stretch"  LineStroke="{DynamicResource InperTheme}" Margin="46 0 0 0"  />
                </Grid>
                <RadioButton HorizontalAlignment="Left" Checked="{s:Action TriggerStop_Checked}" Margin="0 20 0 0" GroupName="stop" x:Name="immediatelyStop" IsChecked="{Binding Immediately,Mode=TwoWay}">
                    <TextBlock Text="Immediately after pressing button Stop" Margin="5 0 0 0"  FontSize="{DynamicResource InperLargeFontSize}"/>
                </RadioButton>
                <RadioButton HorizontalAlignment="Left" Checked="{s:Action TriggerStop_Checked}" Margin="0 20 0 0" GroupName="stop" x:Name="delayStop" IsChecked="{Binding Delay.IsActive,Mode=TwoWay}">
                    <WrapPanel IsEnabled="{Binding ElementName=delayStop,Path=IsChecked}">
                        <TextBlock Text="Delay after pressing button Start (s)" VerticalAlignment="Center" Margin="5 0 0 0"  FontSize="{DynamicResource InperLargeFontSize}"/>
                        <hc:TextBox Width="40" HorizontalAlignment="Right" Margin="10 0 0 0" Text="{Binding Delay.Value,Mode=TwoWay}"/>
                    </WrapPanel>
                </RadioButton>
                <RadioButton HorizontalAlignment="Left" Checked="{s:Action TriggerStop_Checked}" Margin="0 20 0 0" GroupName="stop" x:Name="atTimeStop" IsChecked="{Binding AtTime.IsActive,Mode=TwoWay}" FontSize="{DynamicResource InperLargeFontSize}">
                    <WrapPanel IsEnabled="{Binding ElementName=atTimeStop,Path=IsChecked}">
                        <TextBlock Text="At time" Margin="5 0 0 0" VerticalAlignment="Center" />
                        <inper:InperTextBox Style="{StaticResource TextBoxBaseStyle}" Width="40" InperTextType="Double" InperVerify="True" InperMaxValue="23" InperMinValue="0" InperTextChanged="{s:Action AtTime_TextChanged}" Name="stopHours" HorizontalContentAlignment="Center" Margin="19 0 0 0" Text="{Binding AtTime.Hours,Mode=TwoWay}"/>
                        <TextBlock Text="：" VerticalAlignment="Center" Margin="5 0"/>
                        <inper:InperTextBox Style="{StaticResource TextBoxBaseStyle}" Width="40" InperTextType="Double" InperVerify="True" InperMaxValue="59" InperMinValue="0" InperTextChanged="{s:Action AtTime_TextChanged}" Name="stopMinutes" HorizontalContentAlignment="Center" Text="{Binding AtTime.Minutes,Mode=TwoWay}"/>
                        <TextBlock Text="：" VerticalAlignment="Center" Margin="4 0"/>
                        <inper:InperTextBox Style="{StaticResource TextBoxBaseStyle}" Width="40" InperTextType="Double" InperVerify="True" InperMaxValue="59" InperMinValue="0" InperTextChanged="{s:Action AtTime_TextChanged}" Name="stopSeconds" HorizontalContentAlignment="Center" Text="{Binding AtTime.Seconds,Mode=TwoWay}"/>
                    </WrapPanel>
                </RadioButton>
                <WrapPanel Margin="0 20 0 0"  Visibility="Collapsed">
                    <RadioButton HorizontalAlignment="Left" Checked="{s:Action TriggerStop_Checked}" VerticalAlignment="Top" x:Name="triggerRadStop" Margin="0 5 0 0 " GroupName="stop" IsChecked="{Binding Trigger.IsActive,Mode=TwoWay}">
                        <WrapPanel  IsEnabled="{Binding ElementName=triggerRadStop,Path=IsChecked}">
                            <TextBlock Text="Trigger" Margin="5 0 0 0" VerticalAlignment="Center"  FontSize="{DynamicResource InperLargeFontSize}"/>
                            <TextBlock Text="Source" Foreground="#333" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="10 0"/>
                            <ComboBox HorizontalAlignment="Right" Width="80" Style="{StaticResource ComboBoxExtend}" SelectedValue="{Binding Trigger.Source,Mode=TwoWay}" />
                            <TextBlock Text="Pritrigger (ms)" Foreground="#333" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="10 0"/>
                            <TextBox HorizontalAlignment="Right" Width="80" Text="{Binding Trigger.PriTrigger,Mode=TwoWay}" />
                            <TextBlock Text="Threshod (V)" Foreground="#333" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="10 0"/>
                            <TextBox HorizontalAlignment="Right" Width="40" Text="{Binding Trigger.ThreshodMin,Mode=TwoWay}" />
                            <TextBlock Text="-" Foreground="#333" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="10 0"/>
                            <TextBox HorizontalAlignment="Right" Width="40" Text="{Binding Trigger.ThreshodMax,Mode=TwoWay}" />
                        </WrapPanel>
                    </RadioButton>
                    <StackPanel Margin="19 0 0 0" IsEnabled="{Binding ElementName=triggerRadStop,Path=IsChecked}" Name="stStop" >
                    </StackPanel>
                </WrapPanel>
            </StackPanel>
        </Grid>

        <Grid x:Name="video" Visibility="Collapsed">
            <Grid x:Name="Marker" Margin="20 0" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" >
                    <Grid Margin="0 0 0 0" >
                        <TextBlock Text="Video Settings" Foreground="{DynamicResource InperTheme}" FontSize="{DynamicResource InperNormalFontSize}" />
                        <hc:Divider Width="140" VerticalAlignment="Center" HorizontalAlignment="Right" Opacity=".4"  LineStroke="{DynamicResource InperTheme}" Margin="0 0 20 0" />
                    </Grid>
                    <Grid Margin="0 20 0 0" >
                        <TextBlock VerticalAlignment="Center" Text="Video"  FontSize="{DynamicResource InperNormalFontSize}"/>
                        <ComboBox Margin="20 0" FontSize="{StaticResource InperNormalFontSize}" HorizontalAlignment="Right" SelectedIndex="0" ItemsSource="{Binding UnusedKits,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Name" Width="170" x:Name="CameraCombox" SelectionChanged="{s:Action CameraCombox_SelectionChanged}"/>
                    </Grid>
                    <Grid Margin="0 20 0 0" >
                        <TextBlock VerticalAlignment="Center" Text="Name"  FontSize="{DynamicResource  InperNormalFontSize}"/>
                        <hc:TextBox Margin="20 0" Style="{DynamicResource TextBoxBaseStyle}" FontSize="{StaticResource InperNormalFontSize}" x:Name="CameraName" TextChanged="{s:Action CameraName_TextChanged}" Text="Video-" HorizontalAlignment="Right"  Width="170" />
                    </Grid>
                    <Grid Margin="0 20 0 0" >
                        <Border HorizontalAlignment="Left" Width="240" Margin="0"   Height="150">
                            <Image Stretch="Fill" Source="{Binding ElementName=CameraCombox,Path=SelectedItem.WriteableBitmap,UpdateSourceTrigger=PropertyChanged}" />
                        </Border>
                    </Grid>

                </StackPanel>
                <Grid Grid.Column="1" Margin="0">
                    <Button Cursor="Hand" x:Name="rightMove" Command="{s:Action CameraMove}" CommandParameter="rightMove" hc:IconElement.Geometry="{DynamicResource RightGeometry}" Width="36" Height="24" Margin="0 0 0 130" Style="{DynamicResource ButtonPrimary}" Background="{DynamicResource InperTheme}" ></Button>
                    <Button Cursor="Hand" x:Name="leftMove" Command="{s:Action CameraMove}" CommandParameter="leftMove" hc:IconElement.Geometry="{DynamicResource LeftGeometry}" Width="36" Height="24"   Margin="0 -30 0 0" Style="{DynamicResource ButtonPrimary}" Background="{DynamicResource InperTheme}"></Button>
                </Grid>
                <StackPanel Grid.Column="2" Margin="20 0 0 0">
                    <Grid Margin="0 0 0 0">
                        <TextBlock Text="Active Videos" Foreground="{DynamicResource InperTheme}" FontSize="{DynamicResource InperNormalFontSize}" />
                        <hc:Divider Width="80" VerticalAlignment="Center" HorizontalAlignment="Right" Opacity=".4" LineStroke="{DynamicResource InperTheme}" Margin="0 0 0 0" />
                    </Grid>
                    <ListBox Margin="0 20" Height="190" ScrollViewer.VerticalScrollBarVisibility="Auto" x:Name="cameraActiveChannel" ItemsSource="{Binding UsedKits}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="-10 0"  MouseLeftButtonDown="{s:Action ActiveVideo_MouseLeftButtonDown}">
                                    <!--<Label Height="20"  Margin="2 5" Grid.Column="0" Background="{Binding BgColor}" Cursor="Hand"/>-->
                                    <TextBlock Grid.Column="1" Style="{DynamicResource TextBlockBaseStyle}" FontSize="{DynamicResource InperNormalFontSize}" TextWrapping="NoWrap" Text="{Binding CustomName}" />
                                    <Border Width="{Binding ElementName= cameraActiveChannel,Path= ActualWidth}" Margin="0 0 0 -5" BorderBrush="{Binding ElementName= cameraActiveChannel,Path=BorderBrush}" BorderThickness="0 0 0 1"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</inp:InperDialogWindow>
